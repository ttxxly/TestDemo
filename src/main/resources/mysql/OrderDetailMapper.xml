<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "classpath:com/skm/common/mybatis/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skm.demo.persistence.dao.OrderDetailDao">

    <resultMap id="AllSumAndMoney" type="com.skm.demo.persistence.DTO.OrderQueryDTO">
        <result column="productTypeNum" jdbcType="BIGINT" property="productTypeNum" />
        <result column="productNum" jdbcType="BIGINT" property="productNum" />
        <result column="totalMoney" jdbcType="DECIMAL" property="totalMoney" />
        <result column="orderNo" jdbcType="VARCHAR" property="orderNo" />
    </resultMap>

    <resultMap id="bean" type="com.skm.demo.domain.OrderDetailBean">
        <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
        <result column="product_code" jdbcType="VARCHAR" property="productCode" />
        <result column="product_name" jdbcType="VARCHAR" property="productName" />
        <result column="amount" jdbcType="BIGINT" property="amount" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="total_money" jdbcType="DECIMAL" property="totalMoney" />
    </resultMap>


    <insert id="batchSaveOrderDetails" useGeneratedKeys="true"
            parameterType="com.skm.common.mybatis.dto.BatchInsertParameter" keyProperty="id">
        <![CDATA[
               INSERT INTO `demo_order_detail` (
                    `order_no`,
                    `product_code`,
                    `product_name`,
                    `amount`,
                    `price`,
                    `total_money`,3
                    `entry_id`,
                    `entry_name`,
                    `entry_dt`,
                    `update_id`,
                    `update_name`,
                    `update_dt`
                  )
              VALUES (
                    #{orderNo, jdbcType=VARCHAR},
                    #{productCode, jdbcType=VARCHAR},
                    #{productName, jdbcType=VARCHAR},
                    #{amount, jdbcType=BIGINT},
                    #{price, jdbcType=DECIMAL},
                    #{totalMoney, jdbcType=DECIMAL},
                    #{entryId, jdbcType=BIGINT},
                    #{entryName, jdbcType=VARCHAR},
                    #{entryDt, jdbcType=TIMESTAMP},
                    #{updateId, jdbcType=BIGINT},
                    #{updateName, jdbcType=VARCHAR},
                    #{updateDt, jdbcType=TIMESTAMP}
              )
          ]]>
    </insert>

    <select id="getNumAndMoneyByNos" resultMap="AllSumAndMoney"
            parameterType="com.skm.common.mybatis.dto.BatchInsertParameter" >
        SELECT
        COUNT(order_no) as productTypeNum,
        SUM(amount) as productNum,
        SUM(total_money) as totalMoney,
        order_no as orderNo
        FROM
        `demo_order_detail`
        WHERE
            `order_no` IN <foreach collection="orderNos" item="orderNo" open="(" separator="," close=")">#{orderNo, jdbcType=VARCHAR}</foreach>
    </select>

    <select id="getOrderDetailByNo" resultMap="bean">
        SELECT
        *
        FROM
        `demo_order_detail`
        WHERE
            `order_no` = #{no, jdbcType=VARCHAR}
    </select>

    <delete id="deleteOrderDetailByNoAndCode" >
        DELETE FROM
            `demo_order_detail`
        WHERE
            `order_no` = #{no, jdbcType=VARCHAR}
        AND
            `product_code` = #{code, jdbcType=VARCHAR}
    </delete>


    <update id="batchUpdateOrderDetail" keyProperty="id" parameterType="com.skm.common.mybatis.dto.BatchUpdateParameter">
        <![CDATA[
            UPDATE `demo_order_detail`
                SET `product_code` = #{productCode, jdbcType=VARCHAR}
                    , `product_name` = #{productName, jdbcType=VARCHAR}
                    , `amount` = #{amount, jdbcType=BIGINT}
                    , `price` = #{price, jdbcType=DECIMAL}
                    , `total_money` = #{totalMoney, jdbcType=DECIMAL}
                    , `update_id` = #{updateId, jdbcType=BIGINT}
                    , `update_name` = #{updateName, jdbcType=VARCHAR}
                    , `update_dt` = #{updateDt, jdbcType=TIMESTAMP}
                WHERE order_no = #{orderNo, jdbcType=VARCHAR}
          ]]>
    </update>
</mapper>
